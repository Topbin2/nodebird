{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {}\n};\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data: data\n  };\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHANGE_NICKNAME\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n\n    default:\n      return console.log(\"type check !\");\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"names":["initialState","user","isLoggedIn","signUpData","loginData","post","changeNickname","data","type","rootReducer","state","action","name","console","log"],"sources":["/Users/a1234/Documents/react-nodebird/front/reducers/index.js"],"sourcesContent":["const initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {},\n  },\n  post: {\n    \n  }\n};\n\nconst changeNickname = (data) => {\n  return { type: \"CHANGE_NICKNAME\", data };\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHANGE_NICKNAME\":\n      return {\n        ...state,\n        name: action.data,\n      };\n    default:\n      return console.log(\"type check !\");\n  }\n};\n\nexport default rootReducer;\n"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE;IACJC,UAAU,EAAE,KADR;IAEJD,IAAI,EAAE,IAFF;IAGJE,UAAU,EAAE,EAHR;IAIJC,SAAS,EAAE;EAJP,CADa;EAOnBC,IAAI,EAAE;AAPa,CAArB;;AAYA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;EAC/B,OAAO;IAAEC,IAAI,EAAE,iBAAR;IAA2BD,IAAI,EAAJA;EAA3B,CAAP;AACD,CAFD;;AAIA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAkC;EAAA,IAAjCC,KAAiC,uEAAzBV,YAAyB;EAAA,IAAXW,MAAW;;EACpD,QAAQA,MAAM,CAACH,IAAf;IACE,KAAK,iBAAL;MACE,uCACKE,KADL;QAEEE,IAAI,EAAED,MAAM,CAACJ;MAFf;;IAIF;MACE,OAAOM,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAP;EAPJ;AASD,CAVD;;AAYA,eAAeL,WAAf"},"metadata":{},"sourceType":"module"}